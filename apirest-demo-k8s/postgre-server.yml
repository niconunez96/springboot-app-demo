apiVersion: v1                    # API version
kind: Service                     # Type of kubernetes resource
metadata:
  name: postgre-server-port         # Name of the resource
  labels:                         # Labels that will be applied to the resource
    app: postgre-server-port
spec:
  ports:
    - port: 5432
  selector:                       # Selects any Pod with labels `app=polling-app,tier=mysql`
    app: postgre-server
    tier: postgre
  clusterIP: None
---
apiVersion: apps/v1
kind: Deployment                    # Type of the kubernetes resource
metadata:
  name: postgre-server-deployment           # Name of the deployment
  labels:                           # Labels applied to this deployment
    app: postgre-server
spec:
  selector:
    matchLabels:                    # This deployment applies to the Pods matching the specified labels
      app: postgre-server
      tier: postgre
  strategy:
    type: Recreate
  template:                         # Template for the Pods in this deployment
    metadata:
      labels:                       # Labels to be applied to the Pods in this deployment
        app: postgre-server
        tier: postgre
    spec:                           # The spec for the containers that will be run inside the Pods in this deployment
      containers:
        - image: postgres:9.6-alpine            # The container image
          name: postgre
          env:                        # Environment variables passed to the container
            - name: POSTGRES_PASSWORD
              value: "1234"
            - name: POSTGRES_DB
              value: "db_alumnos"
            - name: POSTGRES_USER
              value: "apirest-user"
          ports:
            - containerPort: 5432        # The port that the container exposes
              name: postgre
          volumeMounts:
            - name: postgre-persistent-storage  # This name should match the name specified in `volumes.name`
              mountPath: /var/lib/mysql
      volumes:                       # A PersistentVolume is mounted as a volume to the Pod
        - name: postgre-persistent-storage
          persistentVolumeClaim:
            claimName: db-pv-claim